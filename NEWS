New in Version 1.3.0.0
=======================
***RMINC now with more Graphics***
* mincArray - give your minc volume objects dimensionsality
* mincImage - view a slice through a minc array
* mincPlotAnatAndStatsSlice - view a slice with a statistic overlay
* mincPlotSliceSeries - a convenient way to view a volume, potentially with
  statistic overlays
* launch_shinyRMINC - a handy app for interactively exploring anatomy and statistics
*** 3D tools *Warning, API will likely change*
* read_obj - a reader for BIC-MNI obj files
* plot.bic_obj - create an interactive rgl rendering of an obj, potentially 
  with a statistic overlay with plot(bic_obj)
* obj_montage - create a figure with multiple views of two obj files with overlays
* selectVertex - interactive pick vertices from an obj rendering
* vertexLookup - find vertices from within a set, or look-up statistic values for
  known vertices
*** Tutorials
* doc/visualizationTutorial.html - an exploration of the new 2D tools
* doc/RMINC_rgl.html - a brief overview of the new 3D tools

New in Version 1.2.4.9
======================
* label definitions for the anat* functions are now set by the following 
  environment variable:

  RMINC_LABEL_DEFINITIONS

New in Version 1.2.4.8
======================
* error checking in mincLm with respect to the mask size and input volume sizes
* minc volumes are properly closed, so there is no limit in the numeber of 
  minc files that can be opened in a session anymore
* added civet.CreateBrainViewROI, a function that generates ROI files that can
  be read by brain-view2
* added anatApply analogous to mincApply/vertexApply
* updated default paths to reflect changes at MICe

New in Version 1.2.4.7
======================
* fixed 2 bugs in anatGetFile: 1) calls the correct program in the "labels" method, and 
                               2) provides better error message when the wrong method is called
* some updates to the installation procedure

New in Version 1.2.4.6
======================
* fixed the repeated use of tmp.txt in anatGetAll. Now, this can be run in parallel
  without causing issues.

New in Version 1.2.4.5
======================
* added/updated documentation for RMINC functions
* bug fix in mincLogLikRatio print function

New in Version 1.2.4.4
======================
* bug fix for mincLmer: the bug fix from 1.2.4.3 was incomplete

New in Version 1.2.4.3
======================
* bug fix for mincLmer: the indexing into the MINC files from the R vector was incorrect

New in Version 1.2.4.2
======================
* bug fix in mincTtest. Now the grouping does not need to be passed on as a factor.
  It will convert it to a factor if it's not. Also, it will check that there are 
  only 2 levels in your grouping. Same kind of check is also done in mincPairedTtest

New in Version 1.2.4.1
======================
* fixes a warning message in version 1.2.4 related to some pMincApply calls
  this was discovered just too late to be added to release 1.2.4

New in Version 1.2.4
====================
* added mincLmer funcion (based on lme4). This provides an interface 
  to running linear mixed effects models at every voxel. Deprecates mincLme.
* also added friends of mincLmer: 
  mincLmerEstimateDF
  mincLogLikRatio
  mincLogLikRatioParametricBootstrap
* the snowfall library and related sfInit, sfExport and sfLibrary calls are
  now made inside pMincApply. 
* fixed bug in minc2_model which crashed pMincApply/mincApply once in a 
  while
* removed attach() call removing errors/warnings related to improper detach()
* the RMINC test bed can now be run by: runRMINCTestbed()

Version 1.2.3 was only a "hotfix": exported some forgotten functions
====================================================================

New in Version 1.2.2
====================
* added functions mincTtest, mincPairedTtest and mincWilcoxon
* changed pMincApply interface: "cores" has been changed to "workers" to 
  indicate the number of cpus to be used by snowfall, or the number
  of jobs to use for sge


*****************************************************************
Missing information about previous versions... Needs to be added!
*****************************************************************


New in Version 1.0.5
====================
* changed name of default volume calculation in anatGetFile to be 
  jacobians instead of volume.
* added labels option for volume calculation. This enables users
  to specify a separate set of labels for each input brain and 
  calculate the volume from these directly, rather than using
  a single set of labels for the consensus image combined with 
  the jacobians for each brain.
* fixed error in anatCombineStructures when means are used. 
* this version will now require installation of pyminc
  and pyminctools, both of which contain the python libraries
  and scripts needed for the anatGetFile 'labels' and 'jacobians'
  options. Both of these are available on github.

New in Version 1.0.4
====================

* added a new 'labels' argument to volume.explodeLabelVolume to permit
  specification of a subset of labels that one wants exploded out as
  masks.
* fixed a volume type determination error in mincIO.writeVolumeX. 
  Label volumes were not being identified as such due to
  issues relating to use of floating point values to represent 
  integers.

New in Version 1.0.3
====================

* added a couple of civet convenience functions to 
  compute tissue volumes.
* added a civet convenience function to compute the
  global native-to-icbm_model rescaling factor. This
  is super useful in creating volume estimates in native
  space, given icbm values as input.

New in Version 1.0.2
====================

* added a bunch of civet convenience functions. All functions
  are prefixed with civet.*
* added renamed versions of both of Jason's civet functions, 
  matching the new naming convention. The previous versions
  still exist, but have had deprecation warnings added.
* added a new volume.* prefix for functions that do 
  non-statistical processing on volumes.
* added function volume.explodeLabelVolume() to split, for
  example, a Civet classify volume into its 4 component
  volumes. Also added function volume.combineMaskVolumes()
  to, ummmm, combine any number of mask volume objects into
  a unified mask volume object.
* finally got around to figuring out how to overload the 
  basic S4 arithmetic operators, allowing me to now do
  "+-*/" operations on MincVolumeIO objects without 
  having the resulting objects converted to array objects.
* added a new "label" volume type which is auto-detected and
  displayed using a spectral-ish colormap (like the functional
  volumes).
* added a new "mask" volume type which is auto-detected and
  displayed using a gray-scale (really just black and white) 
  colormap.

New in Version 1.0.1
====================

* major interface change: 
*    o mincIO routines now have a mincIO.* prefix
*    o common (some) rminc functions now use the rminc.* prefix
* moved definition of all S4 generics to AllGenerics.R, in conformance
  with best practices and bio-conductor recommendations
* lots of Rd documentation updating to conform better to R CMD check

New in Version 1.0.0
====================

* integration of new high-level mincIO classes and functions
* some documentation and vignette updates
* inserted test data sets used by vignettes into /inst so that
  vignettes don't need to hard-code paths and so that Rd \examples
  can be made executable.
* countless bits and pieces

New in Version 0.5.13
=====================

* better C api.
* dealing with anatomical structures (ROI)

New in Version 0.5
==================

* mincApply can now produce more than one output per voxel.
* mincFDR can now compute both the False Discovery Rate (default) as
  well as the positive False Discovery Rate.
* some more bits of documentation.
* ability to create pretty pictures through ray-trace.
* various bug fixes.
