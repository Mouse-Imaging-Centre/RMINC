% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/minc_vertex_statistics.R
\name{vertexAtlasApply}
\alias{vertexAtlasApply}
\title{Apply a structure summary function across vertices}
\usage{
vertexAtlasApply(
  filenames,
  atlas,
  fun,
  ...,
  mask = NULL,
  parallel = NULL,
  collate = simplify_masked,
  column = 1,
  atlas_column = 1
)
}
\arguments{
\item{filenames}{vertex file names}

\item{atlas}{The atlas to use to summarize vertices.}

\item{fun}{A function to be applied to each vertex}

\item{...}{additional arguments to \code{fun}}

\item{mask}{A vector of filename indicating a vertex mask (\code{fun} is applied to all vertices
where mask is greater than .5)}

\item{parallel}{A two component vector indicating how to parallelize the computation. If the 
first element is "local" the computation will be run via the parallel package, otherwise it will
be computed using batchtools, see \link{pMincApply} for details. The element should be numeric
indicating the number of jobs to split the computation into.}

\item{collate}{A function to reduce the (potentially masked) list of results into a nice
structure. Defaults to \link{simplify_masked}}

\item{column}{Which column to treat as the input from vertex files.}

\item{atlas_column}{If the atlas is a text file, which column holds the label}
}
\value{
The a matrix with a row of results for each structure
}
\description{
This is a wrapper around vertexApply with `transpose` set to `TRUE`
and `fun` wrapped in with `tapply` over atlas.
}
