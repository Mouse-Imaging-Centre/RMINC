% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/minc_vertex_statistics.R
\name{vertexTFCE}
\alias{vertexTFCE}
\alias{vertexTFCE.numeric}
\alias{vertexTFCE.matrix}
\alias{vertexTFCE.vertexLm}
\alias{vertexTFCE.character}
\title{Threshold Free Cluster Enhancement}
\usage{
vertexTFCE(x, ...)

\method{vertexTFCE}{numeric}(x, surface, E = 0.5, H = 2, nsteps = 100,
  side = c("both", "positive", "negative"), weights = NULL, ...)

\method{vertexTFCE}{matrix}(x, surface, E = 0.5, H = 2, nsteps = 100,
  side = c("both", "positive", "negative"), weights = NULL, ...)

\method{vertexTFCE}{vertexLm}(x, surface, R = 500,
  alternative = c("two.sided", "greater"), E = 0.5, H = 2, nsteps = 100,
  weights = NULL, side = c("both", "positive", "negative"),
  replace = FALSE, parallel = NULL, ...)

\method{vertexTFCE}{character}(x, surface, E = 0.5, H = 2, nsteps = 100,
  side = c("both", "positive", "negative"), weights = NULL, ...)
}
\arguments{
\item{x}{A numeric vector, a filepath to a set of values,
or a \code{matrix} object, or \code{vertexLm} object.}

\item{...}{additional arguments for methods}

\item{surface}{Either a mesh object corresponding to the surface,
an igraph graph object of surface created by \link{obj_to_graph}, or an adjacency list (see details). 
For the \code{matrix} and \link{vertexLm} cases, either a single surface object may be passed and
used for each individual, or a vector of file names}

\item{E}{The exponent by which to raise the extent statistic (default .5)}

\item{H}{The exponent by which to raise the height (default 2)}

\item{nsteps}{The number of steps to discretize the TFCE computation over}

\item{side}{Whether to consider positive and negative statistics or both (default both)}

\item{weights}{A weighting vector assigning area to vertices. The default varies by 
\code{surface} object type. If \code{surface} is an \code{bic_obj} the area of each
vertex is equal to 1/3 the sum of the areas of the triangles it is a member of. If \code{surface}
is an \code{igraph} or adjacency list the default is a vector of ones.}

\item{R}{number of randomizations to perform}

\item{alternative}{Whether to consider a one-sided or two-sided alternative hypothesis. Default
"two-sided", use "greater" for a one sided test.}

\item{replace}{Sample with or without replacement for the randomization, defaults to FALSE (no
replacement)}

\item{parallel}{A two component vector indicating how to parallelize the computation. If the 
first element is "local" the computation will be run via the parallel package, otherwise it will
be computed using batchtools, see \link{pMincApply} for details. The element should be numeric
indicating the number of jobs to split the computation into.}
}
\value{
The behaviour of \code{vertexTFCE} is to perform cluster free enhancement on a object,
in the single dimensional case, a string denoting a vertex file or a numeric vector
it returns a numeric vector with the result. In the matrix case each column is cluster enhanced and 
recomposed into a matrix.
In the \link{vertexLm} case a randomization test is performed on each t-tstatistic column. The results is
a list with 3 elements \itemize{
\item{TFCE: A matrix of the tvalue columns after randomization}
\item{randomization_dist: An RxT matrix where R is the number of randomizations and T is the number of t-statistics,
elements are the largest value obtained by the randomized TFCE}
\item{args: Arguments passed to the internal randomzations and TFCE code}
}
}
\description{
Perform threshold free cluster enhancement as described in 
Smith and Nichols (2008). Cluster-like structures are enhanced
to allow a hybrid cluster/voxel analysis to be performed.
}
\details{
Passing an adjacency list will save some compute time
but is not recommended for general use. If an adjacency list is passed should index starting from 0 for compatibility with c++
code. Adjacency lists of this kind can be generated from graphs with \code{lapply(as_adj_list(graph), `-`, 1)}
using the \link[igraph]{as_adj_list} from the igraph library.
}
\section{Methods (by class)}{
\itemize{
\item \code{numeric}: numeric

\item \code{matrix}: matrix

\item \code{vertexLm}: vertexLm

\item \code{character}: character
}}

