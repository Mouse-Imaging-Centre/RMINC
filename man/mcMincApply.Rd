% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/minc_parallel.R
\name{mcMincApply}
\alias{mcMincApply}
\title{Local multicore mincApply}
\usage{
mcMincApply(
  filenames,
  fun,
  ...,
  mask = NULL,
  tinyMask = FALSE,
  slab_sizes = NULL,
  temp_dir = getwd(),
  cores = getOption("mc.cores", parallel::detectCores() - 1),
  return_raw = FALSE,
  cleanup = TRUE,
  mask_vals = NULL,
  collate = simplify2minc
)
}
\arguments{
\item{filenames}{Paths to the minc files to apply accross}

\item{fun}{An arbitrary R function to be applied}

\item{...}{Additional arguments to pass to fun, see details for a warning}

\item{mask}{The mask used to select voxels to apply to}

\item{tinyMask}{Shrink the mask for testing}

\item{slab_sizes}{A 3 element vector indicating large a chunk of data to read from each minc file 
at a time defaults to one slice along the first dimension.}

\item{temp_dir}{A directory to hold mask files used in the job batching}

\item{cores}{the number of cores to use, defaults to the option
\code{mc.cores} or one less than the number of detected cores if \code{mc.cores} 
is unset.}

\item{return_raw}{An internal use argument that prevents the resulting object
from being reordered and expanded.}

\item{cleanup}{Whether to delete temporary parallelization masks}

\item{mask_vals}{values of the mask over which to parallelize, defaults
to subdividing all masked voxels into the specified number of batches}

\item{collate}{A function to collate the list into another object type}
}
\description{
Split a minc apply job into batches and process it locally
using a fork cluster generated by the parallel package.
}
