% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/minc_voxel_statistics.R
\name{mincApplyRCPP}
\alias{mincApplyRCPP}
\title{Perform Arbitrary calculations on a collection of mincVolumes}
\usage{
mincApplyRCPP(
  filenames,
  fun,
  ...,
  mask = NULL,
  maskval = NULL,
  filter_masked = FALSE,
  slab_sizes = c(1, 1, 1),
  return_indices = FALSE,
  collate = simplify2minc
)
}
\arguments{
\item{filenames}{The name of the files to apply over}

\item{fun}{the function to apply}

\item{...}{additional parameters to fun}

\item{mask}{a numeric mask vector}

\item{maskval}{An integer specifying the value inside the mask where to
apply the function. If left blank (the default) then anything
above 0.5 will be considered inside the mask. This argument
only works for mincApply, not pMincApply.}

\item{filter_masked}{Whether or not to remove the masked values
from the resultant object}

\item{slab_sizes}{a three element numeric vector indicating the size
in voxels of the hyperslab to read for each file. Useful for managing
memory use - larger slabs are faster but require more memory. Sizes
must be an even factor of their respective volume dimensions.}

\item{return_indices}{Whether to return the voxel positions of the results
generally for internal use only.}

\item{collate}{A function to (potentially) collapse the result list
examples include link{unlist} and \link{simplify2array}, defaulting
to \link{simplify2minc} which creates an object of type \code{mincMultiDim},
\code{mincSingleDim}, or \code{mincList} depending on the result structure.
\cr
If you encounter memory issues, it could be due to minc file caching.
Consider trying with the environment variable MINC_FILE_CACHE_MB set to
a small value like 1.}
}
\value{
a list of results subject the the collate function
}
\description{
An RCPP variant of \link{mincApply}, the primary advantage being
that functions of an arbitrary number of arguments can be passed
to mincApplyRCPP.
}
